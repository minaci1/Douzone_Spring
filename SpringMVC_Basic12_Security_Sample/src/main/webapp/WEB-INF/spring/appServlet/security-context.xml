<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!--
	security:intercept-url 우선순위 ...
	작은것에서 > 큰것으로 .....
	  -->
	<!-- 권한설정 -->
	<security:http auto-config="true">
	<security:csrf disabled="true" />
    <security:intercept-url pattern="/login/loginForm.do" access="permitAll" />
    <security:intercept-url pattern="/home.do" access="permitAll" />
    <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" /> <!-- 롤이 있어야 함 -->
    <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER, ROLE_ADMIN')" /><!-- 소개페이지 걸림  -->
    
    <!--  주소를 다 가지고 있다. -->
    <security:form-login 
                login-page="/login/loginForm.do"
                default-target-url="/home.do"
                authentication-failure-url="/login/loginForm.do?error"
                username-parameter="id"
                password-parameter="password" />
    <security:logout logout-url="/logout"
            logout-success-url="/home.do" />
            
    <security:access-denied-handler error-page="/login/accessDenied.do" />
</security:http>

<security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="user" password="1004" authorities="ROLE_USER" />
                <security:user name="admin" password="1004" authorities="ROLE_ADMIN" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>

<!--
	@Configuration
	public class WebSecurityConfig extends WebSecurityConfigurerAdapter {   
		protected void configure(HttpSecurity http) throws Exception {
	        http.csrf().disable().authorizeRequests()
                // /about 요청에 대해서는 로그인을 요구함
                .antMatchers("/about").authenticated()
                // /admin 요청에 대해서는 ROLE_ADMIN 역할을 가지고 있어야 함
                .antMatchers("/admin").hasRole("ADMIN")
                // 나머지 요청에 대해서는 로그인을 요구하지 않음
                .anyRequest().permitAll()
                .and()
                // 로그인하는 경우에 대해 설정함
            .formLogin()
                // 로그인 페이지를 제공하는 URL을 설정함
                .loginPage("/user/loginView")
                // 로그인 성공 URL을 설정함
                .successForwardUrl("/index")
                // 로그인 실패 URL을 설정함
                .failureForwardUrl("/index")
                .permitAll()
                .and()
                .addFilterBefore(customAuthenticationFilter(), UsernamePasswordAuthenticationFilter.class);
    } 
-->
